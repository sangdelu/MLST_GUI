import os
from Bio import SeqIO


class Local_blaster:
    """
    To output: res, self.out_path + 'blast_res.xml'
    """
    def __init__(self, genome_lst, seed_path, out_path, res_name,blast_path):
        self.genome_lst = genome_lst
        self.seed_path = seed_path
        # TODO: outpath is a directory, is there '/' at the end?
        self.out_path = out_path
        self.res_name = res_name
        self.res = self.out_path + 'blast_res.xml'
        self.ref = self.out_path + 'ref'
        self.blast_path = blast_path
        self.local_blast()

    # TODO: Execute local NCBI-Blast+ from python 3.6 (blast+ installed on linux)
    def local_blast(self):
        """
        Use blast to do nucleotide blast.
        Please do all the work in path of out!

        @ parameter:
        ref_gen: string, path of directory, where reference genomes are.
        seed_name: string, name of a fasta file containing all seeds.
        ref_database: strig, name of reference database generated by makdblastdb.
        res_name: string, name of result file of blast.

        @ return:
        string, path containing result file of blast.
        """
        self.merge_fasta()
        self.build_ref()
        self.do_blastn()

    def merge_fasta(self):
        """
        Merge several genomes into one .fasta file.

        @ return:
        string, path of .fasta file.
        """
        # TODO: use SeqIO instead: refactor the genome_lst
        with open(self.out_path + 'merged_genomes.fasta', 'a') as out_handle:
            for genome in getattr(self.genome_lst, 'genome_lst'):
                out_handle.write('>' + genome.title + '\n')
                out_handle.write(str(genome.genome_seq) + '\n')
        return self.out_path + 'merged_genomes.fasta'

    def build_ref(self):
        """
        Use blast to build local reference database.
        makeblastdb: 2.6.0+
        Package: blast 2.6.0

        path of reference : out_path + ref
        """
        cmd = [self.blast_path + 'makeblastdb.exe -in ' + self.out_path + 'merged_genomes.fasta' + ' -dbtype nucl -out ' + self.ref,
               'DEL merged_genomes.fasta']
        for c in cmd:
            os.popen(c).read()

    def do_blastn(self):
        """
        Execute neucleotide blast (blastn) of seeds against reference database.

        @ parameter:
        ref_database: string, path of reference database.
        seeds: string, path of a fasta file containing all seeds.
        out: string, path of result xml file.

        @ return:
        string, path containing result file of blast.
        """
        cmd = self.blast_path + 'blastn.exe -task blastn-short -query ' + self.seed_path + ' -db ' + self.ref + ' -out ' + self.res + ' -evalue 0.001 -outfmt 5'
        os.popen(cmd).read()
